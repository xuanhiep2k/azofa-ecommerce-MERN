{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NONAME.NONAME\\\\Documents\\\\GitHub\\\\azofa\\\\backend\\\\frontend\\\\src\\\\pages\\\\register\\\\RegisterScreen.js\",\n    _s = $RefreshSig$();\n\nimport \"./registerScreen.css\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterScreen = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const navigate = useNavigate();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const registerHandler = async e => {\n    e.preventDefault();\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    if (password !== confirmpassword) {\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n      return setError(\"Mật khẩu không khớp\");\n    }\n\n    try {\n      const {\n        data\n      } = await axios.post(\"/api/auth/register\", {\n        username,\n        email,\n        password\n      }, config);\n      localStorage.setItem(\"authToken\", data.token);\n      navigate(\"/\");\n    } catch (error) {\n      setError(error.response.data.error);\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"register-screen__title\",\n      children: \"\\u0110\\u0103ng k\\xFD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: registerHandler,\n      className: \"register-screen__form\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            required: true,\n            id: \"name\",\n            placeholder: \"Enter username\",\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            required: true,\n            id: \"email\",\n            placeholder: \"Email address\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            required: true,\n            id: \"password\",\n            autoComplete: \"true\",\n            placeholder: \"Enter password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            required: true,\n            id: \"confirmpassword\",\n            autoComplete: \"true\",\n            placeholder: \"Confirm password\",\n            value: confirmpassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/\",\n            children: \"Qu\\xEAn m\\u1EADt kh\\u1EA9u?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/register\",\n            children: \"B\\u1EA1n ch\\u01B0a c\\xF3 t\\xE0i kho\\u1EA3n? \\u0110\\u0103ng k\\xFD ngay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"\\u0110\\u0103ng nh\\u1EADp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"register-screen__subtext\",\n            children: [\"B\\u1EA1n \\u0111\\xE3 c\\xF3 t\\xE0i kho\\u1EA3n r\\u1ED3i? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: \"\\u0110\\u0103ng nh\\u1EADp ngay\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterScreen, \"fT2PFHQ769PtX+u/ebV4/aIrxeQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = RegisterScreen;\nexport default RegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"sources":["C:/Users/NONAME.NONAME/Documents/GitHub/azofa/backend/frontend/src/pages/register/RegisterScreen.js"],"names":["useState","axios","Link","useNavigate","RegisterScreen","history","navigate","username","setUsername","email","setEmail","password","setPassword","confirmpassword","setConfirmPassword","error","setError","registerHandler","e","preventDefault","config","header","setTimeout","data","post","localStorage","setItem","token","response","target","value"],"mappings":"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","sourcesContent":["import \"./registerScreen.css\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nconst RegisterScreen = ({ history }) => {\r\n\r\n    const navigate = useNavigate();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmpassword, setConfirmPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const registerHandler = async (e) => {\r\n        e.preventDefault();\r\n        const config = {\r\n            header: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n        if (password !== confirmpassword) {\r\n            setPassword(\"\");\r\n            setConfirmPassword(\"\");\r\n            setTimeout(() => {\r\n                setError(\"\");\r\n        }, 5000);\r\n            return setError(\"Mật khẩu không khớp\");\r\n        }\r\n\r\n        try {\r\n            const { data } = await axios.post(\"/api/auth/register\", {\r\n            username,\r\n            email,\r\n            password,\r\n            },\r\n            config\r\n        );\r\n        localStorage.setItem(\"authToken\", data.token);\r\n        navigate(\"/\");\r\n        } catch (error) {\r\n            setError(error.response.data.error);\r\n            setTimeout(() => {\r\n                setError(\"\");\r\n            }, 5000);\r\n        }\r\n    };\r\n\r\n  return (\r\n    <div className=\"register-screen\">\r\n      <h1 className=\"register-screen__title\">Đăng ký</h1>\r\n      <form onSubmit={registerHandler} className=\"register-screen__form\">\r\n        {error && <span className=\"error-message\">{error}</span>}\r\n        <fieldset>\r\n          <p>\r\n            <input type=\"text\" required id=\"name\" placeholder=\"Enter username\" value={username} onChange={(e) => setUsername(e.target.value)} />\r\n          </p>\r\n          <p>\r\n            <input type=\"email\" required id=\"email\" placeholder=\"Email address\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n          </p>\r\n          <p>\r\n            <input type=\"password\" required id=\"password\" autoComplete=\"true\" placeholder=\"Enter password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n          </p>\r\n          <p>\r\n            <input type=\"password\" required id=\"confirmpassword\" autoComplete=\"true\" placeholder=\"Confirm password\" value={confirmpassword} onChange={(e) => setConfirmPassword(e.target.value)} />\r\n          </p>\r\n          <p>\r\n              <a href=\"/\">Quên mật khẩu?</a>\r\n              <a href=\"/register\">Bạn chưa có tài khoản? Đăng ký ngay</a>\r\n          </p>\r\n          <p>\r\n              <input type=\"submit\" value=\"Đăng nhập\"/>\r\n          </p>\r\n          <p>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Register\r\n          </button>\r\n          </p>\r\n          <p>\r\n          <span className=\"register-screen__subtext\">\r\n            Bạn đã có tài khoản rồi? <Link to=\"/login\">Đăng nhập ngay</Link>\r\n          </span>\r\n          </p>\r\n        </fieldset>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;"]},"metadata":{},"sourceType":"module"}